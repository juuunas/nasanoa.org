---
import { getCollection } from "astro:content";
import Release from "../../components/Release.astro";
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import OutboundLink from "../../components/OutboundLink.astro";

const sortCollectionByDate = (arr: CollectionEntry<"releases">[]) => {
  arr.sort(
    (a, b) =>
      Date.parse(b.data.pubDate.toString()) -
      Date.parse(a.data.pubDate.toString())
  );
};

const albums = await getCollection(
  "releases",
  ({ data }) => data.type === "album"
);

const comps = await getCollection(
  "releases",
  ({ data }) => data.type === "compilation"
);

const misc = await getCollection(
  "releases",
  ({ data }) => data.type === "misc"
);

sortCollectionByDate(albums);
sortCollectionByDate(comps);
---

<Layout title="Releases">
  <h1>Releases</h1>
  <h2>Albums</h2>
  <div class="space-y-8 divide-y not-prose">
    {
      albums.map((album, index) => (
        <div class={index !== 0 ? "pt-8" : ""}>
          <Release release={album} readMore={true} />
        </div>
      ))
    }
  </div>
  <h2>Miscellaneous</h2>
  {
    misc.map((misc) => (
      <Release release={misc} readMore={false} smaller={true} />
    ))
  }
  <h2>Compilations</h2>
  <div class="flex flex-wrap gap-4 justify-center md:justify-normal not-prose">
    {
      comps.map((comp) => (
        <OutboundLink href={comp.data.sources[0].url}>
          <Image
            class="rounded-lg brightness-75 transition hover:brightness-105"
            src={comp.data.image}
            alt={`${comp.data.title} cover art`}
            title={comp.data.title}
            width={128}
            height={128}
          />
        </OutboundLink>
      ))
    }
  </div>
</Layout>
